<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>软件工程 - Category - morsuning&#39;s Blog</title>
        <link>http://morsuning.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/</link>
        <description>软件工程 - Category - morsuning&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>morsuning@gmail.com (morsuning)</managingEditor>
            <webMaster>morsuning@gmail.com (morsuning)</webMaster><lastBuildDate>Mon, 12 Apr 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://morsuning.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/" rel="self" type="application/rss+xml" /><item>
    <title>简述软件过程改进</title>
    <link>http://morsuning.github.io/post/</link>
    <pubDate>Mon, 12 Apr 2021 00:00:00 &#43;0000</pubDate>
    <author>morsuning</author>
    <guid>http://morsuning.github.io/post/</guid>
    <description><![CDATA[<p>——在CMMI中引入敏捷</p>
<h2 id="1-cmmi概述">1 CMMI概述</h2>
<p>80年代早期，在SEI的资助下美国空军成立了一项研究来分析为什么许多软件合同都会超出工期和预算。由此得出的结论是：糟糕的过程。CMM&amp;CMMI也因此产生。CMMI的中文名称是能力成熟度模型，是一个过程改进方法和模型，它为组织提供了实现高效的软件交付过程所必需的基本元素，关注通过切实改进过程域的成熟度，实现过程改进的目标。它可以用来指导一个项目、一个部门甚至整个组织的过程改进。CMMI能帮助我们整合以往各自为政的组织功能，建立过程改进的目标与优先级，指导我们进行质量改进，还提供了评价现有过程的参照点，最关键的一点是，它提供了过程改进的线路图，目前最主要的用途是评价一个组织的组织级能力。</p>]]></description>
</item>
<item>
    <title>简述软件工程的历史演变</title>
    <link>http://morsuning.github.io/post/</link>
    <pubDate>Wed, 21 Oct 2020 00:00:00 &#43;0000</pubDate>
    <author>morsuning</author>
    <guid>http://morsuning.github.io/post/</guid>
    <description><![CDATA[<p>软件工程的历史演变要从软件发展，软件过程的发展和软件工程管理这三个角度去说。一方面，随着软件的快速发展，出现了许许多多越来越难以解决的问题，为统一地回答和解决这些问题，催生出了软件工程。另一方面，从软件工程中衍生出了软件过程和软件工程管理的概念，它们都是为了解决软件系统开发中的本质困难而诞生的。前者目标是更好地解决问题，而后者的目标则是为了复制成功经验。无论为解决开发软件系统的困难而产生的学科会发展成什么样，它们的核心目标都是解决软件系统开发中的不可见性，复杂性，可变性和一致性这几个本质困难的。下面将就软件发展的历史阶段来说一说这些困难是怎样逐渐增大的以及与之对应的软件过程的演变。</p>]]></description>
</item>
</channel>
</rss>
